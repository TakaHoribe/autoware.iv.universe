<launch>
    <arg name="input_points_raw0" default="/points_raw"/>
    <arg name="input_points_raw1" default=""/>
    <arg name="input_points_raw2" default=""/>
    <arg name="input_points_raw3" default=""/>
    <arg name="input_points_raw4" default=""/>
    <arg name="input_points_raw5" default=""/>
    <arg name="input_points_raw6" default=""/>
    <arg name="input_points_raw7" default=""/>
    <arg name="input_points_number" default="1"/>
    <arg name="output_points_raw" default="/points_raw/cropbox/filtered"/>
    <arg name="tf_output_frame" default="base_link"/>

    <!-- nodelet manager -->
    <group ns="pointcloud_preprocessor">
        <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

        <!-- concat filter -->
        <group if="$(eval input_points_number!=1)">
            <node pkg="nodelet" type="nodelet" name="concatenate_filter" args="load pcl/PointCloudConcatenateDataSynchronizer pcl_manager">
                <remap from="~output" to="points_raw/concatenated" />
                <param name="output_frame" value="$(arg tf_output_frame)" />
                <param name="approximate_sync" value="true" />
                <rosparam if="$(eval input_points_number==2)" param="input_topics" subst_value="true">[$(arg input_points_raw0), $(arg input_points_raw1)]</rosparam>
                <rosparam if="$(eval input_points_number==3)" param="input_topics" subst_value="true">[$(arg input_points_raw0), $(arg input_points_raw1), $(arg input_points_raw2)]</rosparam>
                <rosparam if="$(eval input_points_number==4)" param="input_topics" subst_value="true">[$(arg input_points_raw0), $(arg input_points_raw1), $(arg input_points_raw2), $(arg input_points_raw3)]</rosparam>
                <rosparam if="$(eval input_points_number==5)" param="input_topics" subst_value="true">[$(arg input_points_raw0), $(arg input_points_raw1), $(arg input_points_raw2), $(arg input_points_raw3), $(arg input_points_raw4)]</rosparam>
                <rosparam if="$(eval input_points_number==6)" param="input_topics" subst_value="true">[$(arg input_points_raw0), $(arg input_points_raw1), $(arg input_points_raw2), $(arg input_points_raw3), $(arg input_points_raw4), $(arg input_points_raw5)]</rosparam>
                <rosparam if="$(eval input_points_number==7)" param="input_topics" subst_value="true">[$(arg input_points_raw0), $(arg input_points_raw1), $(arg input_points_raw2), $(arg input_points_raw3), $(arg input_points_raw4), $(arg input_points_raw5), $(arg input_points_raw6)]</rosparam>
                <rosparam if="$(eval input_points_number==8)" param="input_topics" subst_value="true">[$(arg input_points_raw0), $(arg input_points_raw1), $(arg input_points_raw2), $(arg input_points_raw3), $(arg input_points_raw4), $(arg input_points_raw5), $(arg input_points_raw6), $(arg input_points_raw7)]</rosparam>
            </node>
        </group>
        <!-- crop box filter -->
        <node pkg="nodelet" type="nodelet" name="crop_box_filter" args="load pcl/CropBox pcl_manager" output="screen">
            <remap if="$(eval input_points_number==1)" from="~input" to="$(arg input_points_raw0)" />
            <remap if="$(eval input_points_number!=1)" from="~input" to="points_raw/concatenated" />
            <remap from="~output" to="$(arg output_points_raw)" />
            <rosparam>
        min_x: -1.0
        max_x: 3.0
        min_y: -1.20
        max_y: 1.20
        min_z: -100.0 
        max_z: 100.0
        negative: True
            </rosparam>
            <param name="input_frame" value="$(arg tf_output_frame)" />
            <param name="output_frame" value="$(arg tf_output_frame)" />
        </node>
        <!-- <node pkg="nodelet" type="nodelet" name="voxel_grid_outlier_filter" args="load pointcloud_preprocessor/voxel_grid_outlier_filter_nodelet pcl_manager" output="screen">
            <remap from="~input" to="points_raw/cropbox/filtered" />
            <remap from="~output" to="$(arg output_points_raw)" />
            <rosparam>
                voxel_size_x: 0.3
                voxel_size_y: 0.3
                voxel_size_z: 0.5
                voxel_points_threshold: 2
            </rosparam>
            <param name="input_frame" value="$(arg tf_output_frame)" />
            <param name="output_frame" value="$(arg tf_output_frame)" />
        </node> -->
    </group>
</launch>