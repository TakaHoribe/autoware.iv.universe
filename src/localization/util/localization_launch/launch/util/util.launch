<?xml version="1.0"?>
<launch>

  <!-- Topics -->
  <arg name="input_sensor_points_topic" default="/velodyne_points_transed" doc="Sensor points topic"/>
  <arg name="output_crop_vehicle_sensor_points_topic" default="crop_vehicle" doc="Sensor points topic"/>
  <arg name="output_crop_far_sensor_points_topic" default="crop_vehicle_and_far" doc="Sensor points topic"/>
  <arg name="output_downsample_sensor_points_topic" default="downsample" doc="Sensor points topic"/>

  <!-- frame_ids -->
  <arg name="base_frame" default="base_link" doc="Location of output results (ndt_pose, ndt_pose_with_covariance)" />

  <!-- pose_initializer -->
  <include file="$(find pose_initializer)/launch/pose_initializer.launch">
    <arg name="ndt_align_server_name" default="/localization/pose_generator/ndt_align_srv" />
  </include>

  <!-- crop box filter -->
  <node pkg="pointcloud_preprocessor" type="crop_box_filter_node" name="crop_box_filter_vehicle" output="log">
      <remap from="~input" to="$(arg input_sensor_points_topic)" />
      <remap from="~output" to="$(arg output_crop_vehicle_sensor_points_topic)" />
      <rosparam>
        min_x: -1.0
        max_x: 5.0
        min_y: -1.50
        max_y: 1.50
        min_z: -100.0
        max_z: 100.0
        negative: True
      </rosparam>
      <param name="input_frame" value="$(arg base_frame)" />
      <param name="output_frame" value="$(arg base_frame)" />
  </node>

  <node pkg="pointcloud_preprocessor" type="crop_box_filter_node" name="crop_box_filter_far_points" output="log">
      <remap from="~input" to="$(arg output_crop_vehicle_sensor_points_topic)" />
      <remap from="~output" to="$(arg output_crop_far_sensor_points_topic)" />
      <rosparam>
        min_x: -100.0
        max_x: 100.0
        min_y: -100.0
        max_y: 100.0
        min_z: -100.0
        max_z: 100.0
        negative: False
      </rosparam>
      <param name="input_frame" value="$(arg base_frame)" />
      <param name="output_frame" value="$(arg base_frame)" />
  </node>


  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="pointcloud_preprocessor" type="voxel_grid_downsample_filter_node" name="voxel_grid_filter" output="log">
    <remap from="~input" to="$(arg output_crop_far_sensor_points_topic)" />
    <remap from="~output" to="$(arg output_downsample_sensor_points_topic)" />
    <rosparam>
      voxel_size_x: 3.0
      voxel_size_y: 3.0
      voxel_size_z: 3.0
    </rosparam>
  </node>

</launch>
